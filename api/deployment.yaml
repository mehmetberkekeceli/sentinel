apiVersion: v1
kind: Namespace
metadata:
  name: mynamespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: mynamespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - name: app
          image: your_dockerhub_username/your_app_image:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://db-service:5432/blog"
            - name: SPRING_DATASOURCE_USERNAME
              value: "postgres"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "postgres"
            - name: SPRING_DATASOURCE_DRIVER-CLASS-NAME
              value: "org.postgresql.Driver"
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
              value: "org.hibernate.dialect.PostgreSQLDialect"
            - name: SPRING_JPA_HIBERNATE_DDL-AUTO
              value: "none"
            - name: SPRING_JPA_SHOW-SQL
              value: "true"
            - name: GRAYLOG_HOST
              value: "graylog-service"
            - name: SPRING_RABBITMQ_HOST
              value: "rabbitmq-service"
            - name: SPRING_RABBITMQ_PORT
              value: "5672"
            - name: SPRING_RABBITMQ_USERNAME
              value: "guest"
            - name: SPRING_RABBITMQ_PASSWORD
              value: "guest"
---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: mynamespace
spec:
  selector:
    app: app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: mynamespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: postgres:13
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "blog"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: mynamespace
spec:
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: graylog
  namespace: mynamespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: graylog
  template:
    metadata:
      labels:
        app: graylog
    spec:
      containers:
        - name: graylog
          image: graylog/graylog:4.2
          ports:
            - containerPort: 9000
            - containerPort: 12201
          env:
            - name: GRAYLOG_PASSWORD_SECRET
              value: "somepasswordpepper"
            - name: GRAYLOG_ROOT_PASSWORD_SHA2
              value: "somehashedpassword"
            - name: GRAYLOG_HTTP_EXTERNAL_URI
              value: "http://localhost:9000/"
---
apiVersion: v1
kind: Service
metadata:
  name: graylog-service
  namespace: mynamespace
spec:
  selector:
    app: graylog
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
    - protocol: UDP
      port: 12201
      targetPort: 12201
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: mynamespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:4.2
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: mynamespace
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: mynamespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
          ports:
            - containerPort: 9200
          env:
            - name: discovery.type
              value: "single-node"
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-service
  namespace: mynamespace
spec:
  selector:
    app: elasticsearch
  ports:
    - protocol: TCP
      port: 9200
      targetPort: 9200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: mynamespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "guest"
            - name: RABBITMQ_DEFAULT_PASS
              value: "guest"
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: mynamespace
spec:
  selector:
    app: rabbitmq
  ports:
    - protocol: TCP
      port: 5672
      targetPort: 5672
    - protocol: TCP
      port: 15672
      targetPort: 15672